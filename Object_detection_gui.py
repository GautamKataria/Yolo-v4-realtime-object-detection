#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.3
#  in conjunction with Tcl version 8.6
#    Jun 30, 2020 06:58:20 PM IST  platform: Windows NT

import sys
import darknet_image_mod
import darknet_video_mod
import darknet_webcam_mod
from tkinter import *
from tkinter import messagebox

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import Object_detection_gui_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    Object_detection_gui_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    Object_detection_gui_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:

    def webcam(self):
        in123 = self.txt_out.get('1.0', 'end-1c')
        darknet_webcam_mod.YOLO(in123)

    def image(self):
        in123 = self.txt_in.get('1.0', 'end-1c')
        in1234 = self.txt_out.get('1.0', 'end-1c')
        darknet_image_mod.YOLO(in123, in1234)


    def video(self):
        in123 = self.txt_in.get('1.0', 'end-1c')
        in1234 = self.txt_out.get('1.0', 'end-1c')
        darknet_video_mod.YOLO(in123, in1234)

    def help(self):
        messagebox.showinfo('Help Window', '\nInput img/video should be present inside data folder \n'
                                           '\nThe input img/video should be in jpg/mp4 format respectively \n'
                                           '\nThe output would be saved in the demo folder \n'
                                           '\nThe output of the img or video/webcam  will be in jpg & avi format respectively \n'
                                           '\nIf you want to stop the program running on webcam or stop it mid video press Q \n')

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        font10 = "-family {Segoe UI} -size 14 -weight bold"
        font14 = "-family {Segoe UI} -size 10 -slant italic"

        top.geometry("596x447+650+150")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(x=10, y=10, height=425, width=575)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")

        self.txt_in = tk.Text(self.Frame1)
        self.txt_in.place(x=100, y=120, height=24, width=374)
        self.txt_in.configure(background="white")
        self.txt_in.configure(font="TkTextFont")
        self.txt_in.configure(foreground="black")
        self.txt_in.configure(highlightbackground="#d9d9d9")
        self.txt_in.configure(highlightcolor="black")
        self.txt_in.configure(insertbackground="black")
        self.txt_in.configure(selectbackground="#c4c4c4")
        self.txt_in.configure(selectforeground="black")
        self.txt_in.configure(wrap="word")

        self.Label1 = tk.Label(self.Frame1)
        self.Label1.place(x=110, y=30,  height=41, width=344)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(font=font10)
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Object detection using yolov4 model''')

        self.txt_out = tk.Text(self.Frame1)
        self.txt_out.place(x=100, y=190, height=24, width=374)
        self.txt_out.configure(background="white")
        self.txt_out.configure(font="TkTextFont")
        self.txt_out.configure(foreground="black")
        self.txt_out.configure(highlightbackground="#d9d9d9")
        self.txt_out.configure(highlightcolor="black")
        self.txt_out.configure(insertbackground="black")
        self.txt_out.configure(selectbackground="#c4c4c4")
        self.txt_out.configure(selectforeground="black")
        self.txt_out.configure(wrap="word")

        self.Label2 = tk.Label(self.Frame1)
        self.Label2.place(x=90, y=90,  height=21, width=314)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(cursor="fleur")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Enter name of input img/video (not needed for webcam) :-''')

        self.Label3 = tk.Label(self.Frame1)
        self.Label3.place(x=90, y=160,  height=21, width=194)
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''Enter name of output img/video :-''')

        self.Button1 = tk.Button(self.Frame1)
        self.Button1.place(x=40, y=290,  height=34, width=127)
        self.Button1.configure(activebackground="#ececec")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(font=font14)
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(command = self.image, text='''Run on image''')

        self.Button2 = tk.Button(self.Frame1)
        self.Button2.place(x=220, y=290,  height=34, width=127)
        self.Button2.configure(activebackground="#ececec")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(font=font14)
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(command = self.video, text='''Run on video''')

        self.Button3 = tk.Button(self.Frame1)
        self.Button3.place(x=400, y=290,  height=34, width=127)
        self.Button3.configure(activebackground="#ececec")
        self.Button3.configure(activeforeground="#000000")
        self.Button3.configure(background="#d9d9d9")
        self.Button3.configure(disabledforeground="#a3a3a3")
        self.Button3.configure(font=font14)
        self.Button3.configure(foreground="#000000")
        self.Button3.configure(highlightbackground="#d9d9d9")
        self.Button3.configure(highlightcolor="black")
        self.Button3.configure(pady="0")
        self.Button3.configure(command = self.webcam, text='''Run on webcam''')

        self.Button5 = tk.Button(self.Frame1)
        self.Button5.place(x=490, y=40,  height=24, width=67)
        self.Button5.configure(activebackground="#ececec")
        self.Button5.configure(activeforeground="#000000")
        self.Button5.configure(background="#d9d9d9")
        self.Button5.configure(disabledforeground="#a3a3a3")
        self.Button5.configure(foreground="#000000")
        self.Button5.configure(highlightbackground="#d9d9d9")
        self.Button5.configure(highlightcolor="black")
        self.Button5.configure(pady="0")
        self.Button5.configure(command = self.help, text='''Help''')

if __name__ == '__main__':
    vp_start_gui()





